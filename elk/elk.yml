version: "3"
services:
  elasticsearch:
    image: elasticsearch:6.7.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      TZ: Asia/Shanghai
#      network.host: 192.168.3.207
      http.cors.enabled: "true"
      http.cors.allow-origin: "*"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
    volumes:
      - /usr/local/work/docker/elk/esdata:/usr/share/elasticsearch/data
  zoo1:
    image: zookeeper:3.4
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      TZ: Asia/Shanghai
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888
  kafka1:
    image: wurstmeister/kafka
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      TZ: Asia/Shanghai
      #KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: 192.168.3.207
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.3.207:9092
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zoo1
  logstash:
    image: orange2019/elk:logstash
    depends_on:
      - kafka1
      - elasticsearch
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1
    environment:
      TZ: Asia/Shanghai
 
